{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NEOMC\\\\Desktop\\\\udemy-react-study\\\\project1\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmout] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  const titleChangeHandler = ev => {\n    setEnteredTitle(ev.target.value);\n    // console.log(ev.target.value);\n    // console 창에서 ev만을 확인 했을 땐 input 그 자체만 나온다. 클릭해서 확인해보면 value 값에 트리거가 실행되었을때 값을 가지고 있는 것이 보이는데 ev.value로 확인 하지 말고 ev.target.value 로 확인\n  };\n\n  const amountChangeHandler = ev => {\n    setEnteredAmout(ev.target.value);\n  };\n  const dateChangeHandler = ev => {\n    setEnteredDate(ev.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC0C1\\uD488\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onInput: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uAC00\\uACA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onInput: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0A0\\uC9DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          step: \"2022-12-31\",\n          onInput: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"5uxC+jUwMAw9yfRjQok592nkxfM=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\n/*\r\n    onInput \r\n    값이 입력되거나 인풋에 변화가 생기면 수신할 이벤트 리스너\r\n    장점 : 모든 인풋 타입에 같은 이벤트를 사용할 수 있다\r\n    * 프로퍼티가 뒷단에서 DOM에 렌더링되는 input 요소에 이벤트 변화를 수신하는 이벤트 리스너를 추가해 준다.\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmout","enteredDate","setEnteredDate","titleChangeHandler","ev","target","value","amountChangeHandler","dateChangeHandler","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onInput","min","step","_c","$RefreshReg$"],"sources":["C:/Users/NEOMC/Desktop/udemy-react-study/project1/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmout] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n\r\n    const titleChangeHandler = ev => {\r\n        setEnteredTitle(ev.target.value);\r\n        // console.log(ev.target.value);\r\n         // console 창에서 ev만을 확인 했을 땐 input 그 자체만 나온다. 클릭해서 확인해보면 value 값에 트리거가 실행되었을때 값을 가지고 있는 것이 보이는데 ev.value로 확인 하지 말고 ev.target.value 로 확인\r\n    }\r\n    const amountChangeHandler = ev => {\r\n        setEnteredAmout(ev.target.value);\r\n    }\r\n    const dateChangeHandler = ev => {\r\n        setEnteredDate(ev.target.value);\r\n    }\r\n    return (\r\n        <form>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>상품</label>\r\n                    <input type=\"text\" onInput={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>가격</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" onInput={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>날짜</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" step=\"2022-12-31\" onInput={titleChangeHandler}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">완료</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\nexport default ExpenseForm;\r\n/*\r\n    onInput \r\n    값이 입력되거나 인풋에 변화가 생기면 수신할 이벤트 리스너\r\n    장점 : 모든 인풋 타입에 같은 이벤트를 사용할 수 있다\r\n    * 프로퍼티가 뒷단에서 DOM에 렌더링되는 input 요소에 이벤트 변화를 수신하는 이벤트 리스너를 추가해 준다.\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}