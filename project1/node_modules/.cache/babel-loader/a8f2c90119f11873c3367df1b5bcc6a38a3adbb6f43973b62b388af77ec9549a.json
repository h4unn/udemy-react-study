{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\NEOMC\\\\Desktop\\\\udemy-react-study\\\\project1\\\\src\\\\components\\\\NewExpense\\\\ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './ExpenseForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = () => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState('');\n  const [enteredAmount, setEnteredAmount] = useState('');\n  const [enteredDate, setEnteredDate] = useState('');\n  // const [userInput,setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmout: '',\n  //     enteredDate:''\n  // })\n  const titleChangeHandler = ev => {\n    // setUserInput({\n    //     ...userInput,\n    //     enteredTitle: ev.target.value\n    // });\n    // setUserInput((prevState) => {\n    //     return { ...prevState, enteredTitle: ev.target.value };\n    // });\n    setEnteredTitle(ev.target.value);\n  };\n  const amountChangeHandler = ev => {\n    // setUserInput({\n    //     ...userInput,\n    //     enteredAmout: ev.target.value\n    // });\n    setEnteredAmount(ev.target.value);\n  };\n  const dateChangeHandler = ev => {\n    // setUserInput({\n    //     ...userInput,\n    //     enteredDate: ev.target.value\n    // });\n    setEnteredDate(ev.target.value);\n  };\n\n  // const inputChangeHandler = (identifier, value) => {\n  //     if (identifier === 'title') {\n  //         setEnteredTitle(value);\n  //     } else if (identifier === 'date') {\n  //         setEnteredDate(value);\n  //     } else if (identifier === 'amount') {\n  //         setEnteredAmount(value);\n  //     }\n  // }// 위에 있는 함수를 합친 함수\n  const submitHandler = ev => {\n    ev.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    console.log(expenseData);\n    setEnteredTitle = \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uC0C1\\uD488\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: enteredTitle,\n          onInput: titleChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uAC00\\uACA9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          min: \"0.01\",\n          step: \"0.01\",\n          onInput: amountChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\uB0A0\\uC9DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          min: \"2019-01-01\",\n          step: \"2022-12-31\",\n          onInput: dateChangeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC644\\uB8CC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), \"z\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(ExpenseForm, \"/TSOglz5ZV3C6oWQkp/FZ+OWqo4=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\n/*\r\n    onInput \r\n    값이 입력되거나 인풋에 변화가 생기면 수신할 이벤트 리스너\r\n    장점 : 모든 인풋 타입에 같은 이벤트를 사용할 수 있다\r\n    * 프로퍼티가 뒷단에서 DOM에 렌더링되는 input 요소에 이벤트 변화를 수신하는 이벤트 리스너를 추가해 준다.\r\n*/\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","titleChangeHandler","ev","target","value","amountChangeHandler","dateChangeHandler","submitHandler","preventDefault","expenseData","title","amount","date","Date","console","log","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onInput","min","step","_c","$RefreshReg$"],"sources":["C:/Users/NEOMC/Desktop/udemy-react-study/project1/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './ExpenseForm.css';\r\n\r\nconst ExpenseForm = () => {\r\n    const [enteredTitle, setEnteredTitle] = useState('');\r\n    const [enteredAmount, setEnteredAmount] = useState('');\r\n    const [enteredDate, setEnteredDate] = useState('');\r\n    // const [userInput,setUserInput] = useState({\r\n    //     enteredTitle: '',\r\n    //     enteredAmout: '',\r\n    //     enteredDate:''\r\n    // })\r\n    const titleChangeHandler = ev => {\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredTitle: ev.target.value\r\n        // });\r\n        // setUserInput((prevState) => {\r\n        //     return { ...prevState, enteredTitle: ev.target.value };\r\n        // });\r\n        setEnteredTitle(ev.target.value);\r\n    }\r\n    const amountChangeHandler = ev => {\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredAmout: ev.target.value\r\n        // });\r\n        setEnteredAmount(ev.target.value);\r\n    }\r\n    const dateChangeHandler = ev => {\r\n        // setUserInput({\r\n        //     ...userInput,\r\n        //     enteredDate: ev.target.value\r\n        // });\r\n        setEnteredDate(ev.target.value);\r\n    }\r\n\r\n    // const inputChangeHandler = (identifier, value) => {\r\n    //     if (identifier === 'title') {\r\n    //         setEnteredTitle(value);\r\n    //     } else if (identifier === 'date') {\r\n    //         setEnteredDate(value);\r\n    //     } else if (identifier === 'amount') {\r\n    //         setEnteredAmount(value);\r\n    //     }\r\n    // }// 위에 있는 함수를 합친 함수\r\n    const submitHandler = (ev) => {\r\n        ev.preventDefault();\r\n        const expenseData = {\r\n            title: enteredTitle,\r\n            amount: enteredAmount,\r\n            date: new Date(enteredDate)\r\n        };\r\n        console.log(expenseData);\r\n        setEnteredTitle = \"\";\r\n    }\r\n    return (\r\n        <form onSubmit={submitHandler}>\r\n            <div className=\"new-expense__controls\">\r\n                <div className=\"new-expense__control\">\r\n                    <label>상품</label>\r\n                    <input type=\"text\" value={enteredTitle} onInput={titleChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>가격</label>\r\n                    <input type=\"number\" min=\"0.01\" step=\"0.01\" onInput={amountChangeHandler}/>\r\n                </div>\r\n                <div className=\"new-expense__control\">\r\n                    <label>날짜</label>\r\n                    <input type=\"date\" min=\"2019-01-01\" step=\"2022-12-31\" onInput={dateChangeHandler} />\r\n                </div>\r\n            </div>\r\n            <div className=\"new-expense__actions\">\r\n                <button type=\"submit\">완료</button>\r\n            </div>z\r\n        </form>\r\n    );\r\n}\r\nexport default ExpenseForm;\r\n/*\r\n    onInput \r\n    값이 입력되거나 인풋에 변화가 생기면 수신할 이벤트 리스너\r\n    장점 : 모든 인풋 타입에 같은 이벤트를 사용할 수 있다\r\n    * 프로퍼티가 뒷단에서 DOM에 렌더링되는 input 요소에 이벤트 변화를 수신하는 이벤트 리스너를 추가해 준다.\r\n*/"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}